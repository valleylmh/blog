(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{519:function(t,e,r){"use strict";r.r(e);var a=r(25),l=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("用一组任意存储的单元来存储线性表的数据元素。一个对象存储着本身的值和下一个元素的地址。")]),t._v(" "),r("ul",[r("li",[t._v("需要遍历才能查询到元素，查询慢。")]),t._v(" "),r("li",[t._v("插入元素只需断开连接重新赋值，插入快。")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/08/18/K7ysIF3qXzTJxUN.jpg",alt:""}})]),t._v(" "),r("p",[t._v("链表在开发中也是经常用到的数据结构，"),r("code",[t._v("React16")]),t._v("的 "),r("code",[t._v("Fiber Node")]),t._v("连接起来形成的"),r("code",[t._v("Fiber Tree")]),t._v(", 就是个单链表结构。")]),t._v(" "),r("h3",{attrs:{id:"基本应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本应用"}},[t._v("#")]),t._v(" 基本应用")]),t._v(" "),r("blockquote",[r("p",[t._v("主要是对链表基本概念和特性的应用，如果基础概念掌握牢靠，此类问题即可迎刃而解")])]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/dataStructure/链表/从尾到头打印链表.html"}},[t._v("从尾到头打印链表")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/dataStructure/链表/删除链表中的节点or重复的节点.html#删除链表中的节点"}},[t._v("删除链表中的节点")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/dataStructure/链表/反转链表.html"}},[t._v("反转链表")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/dataStructure/链表/复杂链表的复制.html"}},[t._v("复杂链表的复制")])],1)]),t._v(" "),r("h3",{attrs:{id:"环类题目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#环类题目"}},[t._v("#")]),t._v(" 环类题目")]),t._v(" "),r("blockquote",[r("p",[t._v("环类题目即从判断一个单链表是否存在循环而扩展衍生的问题")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/explore/learn/card/linked-list/194/two-pointer-technique/744/",target:"_blank",rel:"noopener noreferrer"}},[t._v("环形链表"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/dataStructure/链表/链表中环的入口节点.html"}},[t._v("链表环的入口节点")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/dataStructure/链表/圈圈中最后剩下的数字.html"}},[t._v("约瑟夫环")])],1)]),t._v(" "),r("h3",{attrs:{id:"双指针"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#双指针"}},[t._v("#")]),t._v(" 双指针")]),t._v(" "),r("blockquote",[r("p",[t._v("双指针的思想在链表和数组中的题目都经常会用到，主要是利用两个或多个不同位置的指针，通过速度和方向的变换解决问题。")])]),t._v(" "),r("ul",[r("li",[t._v("两个指针从不同位置出发：一个从始端开始，另一个从末端开始；")]),t._v(" "),r("li",[t._v("两个指针以不同速度移动：一个指针快一些，另一个指针慢一些。")])]),t._v(" "),r("p",[t._v("对于单链表，因为我们只能在一个方向上遍历链表，所以第一种情景可能无法工作。然而，第二种情景，也被称为慢指针和快指针技巧，是非常有用的。")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/dataStructure/链表/两个链表的第一个公共节点.html"}},[t._v("两个链表的公共节点")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/dataStructure/链表/链表倒数第k个节点.html"}},[t._v("链表倒数第k个节点")])],1),t._v(" "),r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/explore/learn/card/linked-list/194/two-pointer-technique/746/",target:"_blank",rel:"noopener noreferrer"}},[t._v("相交链表"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"双向链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#双向链表"}},[t._v("#")]),t._v(" 双向链表")]),t._v(" "),r("p",[t._v("双链还有一个引用字段，称为"),r("code",[t._v("prev")]),t._v("字段。有了这个额外的字段，您就能够知道当前结点的前一个结点。")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/explore/learn/card/linked-list/197/conclusion/764/",target:"_blank",rel:"noopener noreferrer"}},[t._v("扁平化多级双向链表"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=l.exports}}]);